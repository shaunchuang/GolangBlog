name: Build, Push and Deploy to k3s via SSH

on:
  push:
    branches:
      - main

jobs:
  build-push:
    runs-on: ubuntu-latest

    outputs:
      frontend_changed: ${{ steps.changes.outputs.frontend_changed }}
      backend_changed: ${{ steps.changes.outputs.backend_changed }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ secrets.GHCR_USERNAME }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Check changed files
      id: changes
      run: |
        echo "🔍 檢查 frontend 和 backend 是否有變更"
        git fetch origin main
        FRONTEND_CHANGED=$(git diff --name-only origin/main HEAD | grep '^frontend/' || true)
        BACKEND_CHANGED=$(git diff --name-only origin/main HEAD | grep '^backend/' || true)

        if [ -n "$FRONTEND_CHANGED" ]; then
          echo "frontend_changed=true" >> $GITHUB_OUTPUT
        else
          echo "frontend_changed=false" >> $GITHUB_OUTPUT
        fi

        if [ -n "$BACKEND_CHANGED" ]; then
          echo "backend_changed=true" >> $GITHUB_OUTPUT
        else
          echo "backend_changed=false" >> $GITHUB_OUTPUT
        fi

    - name: Build and push frontend image if changed
      if: steps.changes.outputs.frontend_changed == 'true'
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: ghcr.io/${{ secrets.GHCR_USERNAME }}/frontend:latest

    - name: Build and push backend image if changed
      if: steps.changes.outputs.backend_changed == 'true'
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: ghcr.io/${{ secrets.GHCR_USERNAME }}/backend:latest

  deploy-via-ssh:
    needs: build-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup SSH key for file transfer
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.HETZNER_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ secrets.HETZNER_HOST }} >> ~/.ssh/known_hosts
          
      - name: Prepare and Transfer Deploy Files
        run: |
          # 將腳本設為可執行
          chmod +x ./scripts/gen-backend-secret.sh
          # 生成 Secret YAML
          ./scripts/gen-backend-secret.sh
          
          # 通過 SCP 傳輸 Secret YAML 到 VM
          scp -i ~/.ssh/id_rsa backend-env.yaml ${{ secrets.HETZNER_USER }}@${{ secrets.HETZNER_HOST }}:~/backend-env.yaml
          
      - name: Deploy to k3s on Hetzner VM via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HETZNER_HOST }}
          username: ${{ secrets.HETZNER_USER }}
          key: ${{ secrets.HETZNER_SSH_KEY }}
          script: |
            # 將 KUBECONFIG 傳到 VM 上
            echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/kubeconfig
            export KUBECONFIG=~/kubeconfig
            
            # 套用 Secret
            kubectl apply -f ~/backend-env.yaml --insecure-skip-tls-verify --validate=false
            
            # 更新 deployment image
            if [ "${{ needs.build-push.outputs.backend_changed }}" = "true" ]; then
              echo "🔄 更新後端 deployment..."
              kubectl set image deployment/backend \
                backend=ghcr.io/${{ secrets.GHCR_USERNAME }}/backend:latest \
                --namespace=default
            fi
            
            if [ "${{ needs.build-push.outputs.frontend_changed }}" = "true" ]; then
              echo "🔄 更新前端 deployment..."
              kubectl set image deployment/frontend \
                frontend=ghcr.io/${{ secrets.GHCR_USERNAME }}/frontend:latest \
                --namespace=default
            fi
