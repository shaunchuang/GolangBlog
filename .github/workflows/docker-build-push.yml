name: Build, Push and Deploy to k3s

on:
  push:
    branches:
      - main

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ secrets.GHCR_USERNAME }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: ghcr.io/${{ secrets.GHCR_USERNAME }}/frontend:latest

    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: ghcr.io/${{ secrets.GHCR_USERNAME }}/backend:latest

    # Êñ∞Â¢ûÔºöË®≠ÂÆö KUBECONFIG Áí∞Â¢ÉËÆäÊï∏
    - name: Decode and set kubeconfig
      run: |
        echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig
        export KUBECONFIG=$PWD/kubeconfig

    - name: Generate backend-env Secret YAML
      run: |
        chmod +x scripts/gen-backend-secret.sh
        ./scripts/gen-backend-secret.sh
     
    - name: Debug backend-env.yaml
      run: |
        echo "üîç backend-env.yaml ÂÖßÂÆπÔºö"
        cat backend-env.yaml

    - name: Apply backend-env Secret to k3s
      run: |
        export KUBECONFIG=$PWD/kubeconfig
        kubectl apply -f backend-env.yaml --insecure-skip-tls-verify --validate=false

    - name: Set backend deployment image
      run: |
        export KUBECONFIG=$PWD/kubeconfig
        kubectl set image deployment/backend backend=ghcr.io/${{ secrets.GHCR_USERNAME }}/backend:latest --namespace=default

    - name: Set frontend deployment image
      run: |
        export KUBECONFIG=$PWD/kubeconfig
        kubectl set image deployment/frontend frontend=ghcr.io/${{ secrets.GHCR_USERNAME }}/frontend:latest --namespace=default
